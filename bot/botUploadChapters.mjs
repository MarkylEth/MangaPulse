import fs from 'fs';
import path from 'path';
import puppeteer from 'puppeteer';

/* ===== –ù–ê–°–¢–†–û–ô –ü–û–î –°–ï–ë–Ø =====
   SITE_URL ‚Äî —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –º–∞–Ω–≥–∏, –≥–¥–µ –≤–∏–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞ ¬´–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É¬ª
   ROOT_DIR ‚Äî –ø–∞–ø–∫–∞ —Å –ø–æ–¥–ø–∞–ø–∫–∞–º–∏ ¬´–¢–æ–º 001 –ì–ª–∞–≤–∞ 1¬ª, ¬´–¢–æ–º 001 –ì–ª–∞–≤–∞ 2 - ...¬ª
   TEAM_NAME ‚Äî —Ç–æ, —á—Ç–æ —Ç—ã –≤–∏–¥–∏—à—å –≤ —á–µ–∫–±–æ–∫—Å–µ –≤ –ø–æ–ª–µ ¬´–ö–æ–º–∞–Ω–¥—ã *¬ª
*/
const SITE_URL  = 'http://localhost:3000/title/65-hulejasig'; // üëà –∑–∞–º–µ–Ω–∏ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—É—é URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–∞–π—Ç–ª–∞
const ROOT_DIR = "E:/manga/–°–≤–æ–ª–æ—á—å";                                  // üëà –∫–æ—Ä–Ω–µ–≤–∞—è –ø–∞–ø–∫–∞ —Å –≥–ª–∞–≤–∞–º–∏
const TEAM_NAME = 'Rikudou-Sennin Clan';                                                     // üëà —Ç–æ—á–Ω–æ–µ –∏–º—è –∫–æ–º–∞–Ω–¥—ã –≤ –º–æ–¥–∞–ª–∫–µ

/* === –î–û–ë–ê–í–õ–ï–ù–û: –ø—Ä–∞–≤–∏–ª–∞ –ø–æ –¥–∏–∞–ø–∞–∑–æ–Ω—É –ø–æ—Ä—è–¥–∫–æ–≤–æ–≥–æ –Ω–æ–º–µ—Ä–∞ –≥–ª–∞–≤—ã (1..N) === */
const TEAM_BY_RANGE = [
  { from: 1,  to: 50,       teams: ['Rikudou-Sennin Clan'] },              // –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞
  { from: 51, to: Infinity, teams: ['Rikudou-Sennin Clan'] } // –î–í–ï –∫–æ–º–∞–Ω–¥—ã
];
function decideTeamsByIndex(seqIndex) {
  for (const r of TEAM_BY_RANGE) {
    if (seqIndex >= r.from && seqIndex <= r.to) {
      const list = Array.isArray(r.teams) ? r.teams : [r.teams].filter(Boolean);
      return list.length ? list : (TEAM_NAME ? [TEAM_NAME] : []);
    }
  }
  return TEAM_NAME ? [TEAM_NAME] : [];
}
function decideTeamByIndex(seqIndex) {
  for (const r of TEAM_BY_RANGE) {
    if (seqIndex >= r.from && seqIndex <= r.to) return r.team;
  }
  return TEAM_NAME; // fallback
}
/* ========================================================================== */
/* ======================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò ========================= */
/* ========================================================================== */

/**
 * –ò–º—è –ø–∞–ø–∫–∏ -> –¥–∞–Ω–Ω—ã–µ –æ –≥–ª–∞–≤–µ.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
 *   "–¢–æ–º 001 –ì–ª–∞–≤–∞ 2"
 *   "–¢–æ–º 001 –ì–ª–∞–≤–∞ 2 - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã"
 *   "–¢–æ–º 002 –ì–ª–∞–≤–∞ 18.5 - –ß—Ç–æ-—Ç–æ —Ç–∞–º"
 */
function parseChapterFolderName(dirName) {
  const re = /^–¢–æ–º\s+(\d+)\s+–ì–ª–∞–≤–∞\s+([\d.]+)(?:\s*-\s*(.+))?$/i;
  const m = dirName.match(re);
  if (!m) {
    throw new Error(`"${dirName}" –Ω–µ —Å–æ–≤–ø–∞–ª–æ —Å —à–∞–±–ª–æ–Ω–æ–º "–¢–æ–º N –ì–ª–∞–≤–∞ X - –ù–∞–∑–≤–∞–Ω–∏–µ"`);
  }

  const volumeRaw  = m[1];          // –Ω–∞–ø—Ä–∏–º–µ—Ä "001"
  const chapterRaw = m[2];          // –Ω–∞–ø—Ä–∏–º–µ—Ä "2" –∏–ª–∏ "18.5"
  const titleRaw   = m[3] ?? '';    // –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø–æ—Å–ª–µ "- ...", –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å

  const volume        = parseInt(volumeRaw, 10) || 0;
  const chapterNumber = parseFloat(chapterRaw); // –ø–æ–¥–¥–µ—Ä–∂–∞–µ–º 12.5
  const title         = titleRaw.trim();

  return { volume, chapterNumber, title };
}

/**
 * –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ —Å—Ç—Ä–∞–Ω–∏—Ü, —á—Ç–æ–±—ã "1,2,10" –Ω–µ —à–ª–æ –∫–∞–∫ "1,10,2".
 * –ú—ã –ø—ã—Ç–∞–µ–º—Å—è –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º—è –∫–∞–∫ —á–∏—Å–ª–æ, –∏–Ω–∞—á–µ fallback —á–µ—Ä–µ–∑ localeCompare.
 */
function sortPageFiles(files) {
  return files.sort((a, b) => {
    const na = parseInt(a, 10);
    const nb = parseInt(b, 10);

    if (Number.isFinite(na) && Number.isFinite(nb)) {
      return na - nb;
    }

    return a.localeCompare(b, 'ru', { numeric: true, sensitivity: 'base' });
  });
}

/**
 * –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∞–ø–æ–∫ –≤ ROOT_DIR ("–¢–æ–º 001 –ì–ª–∞–≤–∞ 1", "–¢–æ–º 001 –ì–ª–∞–≤–∞ 2 - ..."),
 * –ø–∞—Ä—Å–∏–º –∏—Ö, —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ (—Ç–æ–º, –Ω–æ–º–µ—Ä –≥–ª–∞–≤—ã).
 */
function getChapterFoldersSorted(rootDir) {
  const dirs = fs
    .readdirSync(rootDir, { withFileTypes: true })
    .filter(d => d.isDirectory())
    .map(d => d.name);

  const parsed = dirs.map(name => {
    try {
      const p = parseChapterFolderName(name);
      return {
        name,
        volume: p.volume,
        chapterNumber: p.chapterNumber,
      };
    } catch {
      console.warn(`–ü—Ä–æ–ø—É—Å–∫–∞—é –ø–∞–ø–∫—É (–Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –ø–æ —Ñ–æ—Ä–º–∞—Ç—É): ${name}`);
      return null;
    }
  }).filter(Boolean);

  parsed.sort((a, b) => {
    if (a.volume !== b.volume) return a.volume - b.volume;
    return a.chapterNumber - b.chapterNumber;
  });

  return parsed.map(p => p.name);
}

/* ========================================================================== */
/* ======================== –†–ê–ë–û–¢–ê –° –ë–†–ê–£–ó–ï–†–û–ú ============================== */
/* ========================================================================== */

/**
 * –ñ–¥—ë–º, –ø–æ–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—è–≤–∏—Ç—Å—è –∫–Ω–æ–ø–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–º text.
 * –≠—Ç–æ —Å–¥–µ–ª–∞–Ω–æ –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É".
 * timeoutMs = 0 ‚Üí –∂–¥–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ.
 */
async function waitForButtonByText(page, text, { timeoutMs = 0 } = {}) {
  const start = Date.now();
  while (true) {
    const found = await page.evaluate((t) => {
      const btns = Array.from(document.querySelectorAll('button'));
      return btns.some(b => (b.textContent || '').trim().includes(t));
    }, text);

    if (found) return; // –Ω–∞—à–ª–∏ –∫–Ω–æ–ø–∫—É

    if (timeoutMs && Date.now() - start > timeoutMs) {
      throw new Error(`–ö–Ω–æ–ø–∫–∞ "${text}" –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –∑–∞ ${timeoutMs}ms`);
    }

    await new Promise(r => setTimeout(r, 200));
  }
}

/**
 * –ö–ª–∏–∫ –ø–æ –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–µ, –≤ —Ç–µ–∫—Å—Ç–µ –∫–æ—Ç–æ—Ä–æ–π –µ—Å—Ç—å text.
 */
async function clickButtonByText(page, text) {
  const clicked = await page.evaluate((t) => {
    const btns = Array.from(document.querySelectorAll('button'));
    const btn = btns.find(b => (b.textContent || '').trim().includes(t));
    if (btn) {
      (btn).click();
      return true;
    }
    return false;
  }, text);

  if (!clicked) {
    throw new Error(`–ù–µ –Ω–∞—à—ë–ª –∫–Ω–æ–ø–∫—É "${text}" –¥–ª—è –∫–ª–∏–∫–∞`);
  }
}

/**
 * –î–æ–∂–¥–∞—Ç—å—Å—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ "–ù–æ–≤–∞—è –≥–ª–∞–≤–∞".
 * –í —à–∞–ø–∫–µ –º–æ–¥–∞–ª–∫–∏ —É —Ç–µ–±—è <h3>–ù–æ–≤–∞—è –≥–ª–∞–≤–∞</h3>.
 */
async function waitModalOpen(page) {
  await page.waitForFunction(
    () => Array.from(document.querySelectorAll('h3'))
      .some(h => (h.textContent || '').trim() === '–ù–æ–≤–∞—è –≥–ª–∞–≤–∞'),
    { polling: 200, timeout: 10000 }
  );
}

/**
 * –î–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–∫–∏ "–ù–æ–≤–∞—è –≥–ª–∞–≤–∞".
 * –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–ª–∞–≤–∞ –∫–æ–º–º–∏—Ç–∏—Ç—Å—è, –º–æ–¥–∞–ª–∫–∞ –¥–µ–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è.
 */
async function waitModalClose(page) {
  await page.waitForFunction(
    () => !Array.from(document.querySelectorAll('h3'))
      .some(h => (h.textContent || '').trim() === '–ù–æ–≤–∞—è –≥–ª–∞–≤–∞'),
    { polling: 300, timeout: 0 }
  );
}

/**
 * –í–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç/—á–∏—Å–ª–æ –≤ <input placeholder="...">
 * –ú—ã –ø—Ä–∏–≤—è–∑–∞–Ω—ã –∫ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞–º:
 *  - "0"                ‚Üí –¢–æ–º
 *  - "–Ω–∞–ø—Ä–∏–º–µ—Ä, 12"     ‚Üí –ù–æ–º–µ—Ä –≥–ª–∞–≤—ã *
 *  - "–ù–∞–∑–≤–∞–Ω–∏–µ"         ‚Üí –ù–∞–∑–≤–∞–Ω–∏–µ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
 */
async function typeIntoInputByPlaceholder(page, placeholder, value) {
  if (value === null || value === undefined || value === '') return;

  const handle = await page.$(`input[placeholder="${placeholder}"]`);
  if (!handle) {
    throw new Error(`–ù–µ—Ç input[placeholder="${placeholder}"]`);
  }

  // –æ—á–∏—Å—Ç–∫–∞ –ø–æ–ª—è
  await handle.click({ clickCount: 3 });
  await page.keyboard.press('Backspace');

  // –≤–≤–æ–¥
  await page.keyboard.type(String(value), { delay: 20 });
}

/**
 * –ñ–¥—ë–º, –ø–æ–∫–∞ –ø–æ—è–≤–∏—Ç—Å—è —á–µ–∫–±–æ–∫—Å –∫–æ–º–∞–Ω–¥—ã —Å –Ω—É–∂–Ω—ã–º –∏–º–µ–Ω–µ–º.
 * –≠—Ç–æ –≤–∞–∂–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –∫–æ–º–∞–Ω–¥—ã –≥—Ä—É–∑—è—Ç—Å—è —á–µ—Ä–µ–∑ fetch –≤ useEffect.
 */
async function waitForTeamOption(page, teamName, { timeoutMs = 10000 } = {}) {
  const start = Date.now();
  while (true) {
    const found = await page.evaluate((name) => {
      const labels = Array.from(document.querySelectorAll('label'));
      for (const label of labels) {
        const span = label.querySelector('span');
        if (!span) continue;
        const txt = (span.textContent || '').trim();
        if (txt.includes(name)) {
          return true;
        }
      }
      return false;
    }, teamName);

    if (found) return;

    if (timeoutMs && Date.now() - start > timeoutMs) {
      throw new Error(`–ö–æ–º–∞–Ω–¥–∞ "${teamName}" –Ω–µ –ø–æ—è–≤–∏–ª–∞—Å—å –≤ —Å–ø–∏—Å–∫–µ –∑–∞ ${timeoutMs}ms`);
    }

    await new Promise(r => setTimeout(r, 200));
  }
}

/**
 * –°—Ç–∞–≤–∏—Ç –≥–∞–ª–æ—á–∫—É —É –∫–æ–º–∞–Ω–¥—ã –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ –∏–º–µ–Ω–∏.
 */
async function checkTeamByName(page, teamName) {
  if (!teamName.trim()) return;

  const result = await page.evaluate((name) => {
    const labels = Array.from(document.querySelectorAll('label'));
    for (const label of labels) {
      const span = label.querySelector('span');
      if (!span) continue;
      const txt = (span.textContent || '').trim();
      if (txt.includes(name)) {
        const cb = label.querySelector('input[type="checkbox"]');
        if (!cb) return { ok: false, reason: '–Ω–µ—Ç —á–µ–∫–±–æ–∫—Å–∞' };

        if (!cb.checked) {
          cb.click();
          return { ok: true, clickedText: txt, already: false };
        } else {
          return { ok: true, clickedText: txt, already: true };
        }
      }
    }
    return { ok: false, reason: 'label –Ω–µ –Ω–∞–π–¥–µ–Ω' };
  }, teamName);

  if (!result.ok) {
    throw new Error(`–ù–µ —Å–º–æ–≥ –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É "${teamName}": ${result.reason || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
  }

  if (result.already) {
    console.log(`–ö–æ–º–∞–Ω–¥–∞ "${result.clickedText}" —É–∂–µ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞`);
  } else {
    console.log(`–í—ã–±—Ä–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ "${result.clickedText}"`);
  }
}

/**
 * –ù–∞—Ö–æ–¥–∏–º <input type="file" multiple> –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª–∫–∏ –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç—É–¥–∞ —Ñ–∞–π–ª—ã.
 * Puppeteer —Å–∞–º —Å–¥–µ–ª–∞–µ—Ç uploadFile(...).
 */
async function uploadFilesIntoModal(page, filePaths) {
  const input = await page.$('input[type="file"][multiple]');
  if (!input) {
    throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω input[type="file"][multiple] –≤ –º–æ–¥–∞–ª–∫–µ');
  }
  await input.uploadFile(...filePaths);
}

/* === –î–û–ë–ê–í–õ–ï–ù–û: —Å–±—Ä–æ—Å –≤—Å–µ—Ö –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º –Ω–æ–≤–æ–π === */
async function uncheckAllTeams(page) {
  await page.evaluate(() => {
    document.querySelectorAll('label input[type="checkbox"]').forEach(cb => {
      const el = cb; // HTMLInputElement
      if (el.checked) el.click();
    });
  });
}

/* ========================================================================== */
/* ======================== –ó–ê–ì–†–£–ó–ö–ê –û–î–ù–û–ô –ì–õ–ê–í–´ ============================ */
/* ========================================================================== */

/* === –ú–ê–õ–ï–ù–¨–ö–ê–Ø –ü–†–ê–í–ö–ê: –¥–æ–±–∞–≤–∏–ª–∏ seqIndex (–ø–æ—Ä—è–¥–∫–æ–≤—ã–π ‚Ññ 1..N) === */
async function uploadOneChapter(page, absDir, dirName, seqIndex) {
  console.log('\n==============================');
  console.log('üìÇ –ü–∞–ø–∫–∞ –≥–ª–∞–≤—ã:', dirName);

  // 1. –ü–∞—Ä—Å–∏–º –∏–º—è –ø–∞–ø–∫–∏ -> —Ç–æ–º, –Ω–æ–º–µ—Ä –≥–ª–∞–≤—ã, –Ω–∞–∑–≤–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å).
  let volume, chapterNumber, title;
  try {
    const parsed = parseChapterFolderName(dirName);
    volume        = parsed.volume;
    chapterNumber = parsed.chapterNumber;
    title         = parsed.title;
  } catch (err) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –∏–º—è –ø–∞–ø–∫–∏:', err.message);
    return;
  }

  // 2. –°–æ–±–∏—Ä–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü (–∫–∞—Ä—Ç–∏–Ω–∫–∏).
  let pages = fs.readdirSync(absDir, { withFileTypes: true })
    .filter(f => f.isFile())
    .map(f => f.name)
    .filter(n => /\.(jpe?g|png|webp|gif)$/i.test(n));

  if (!pages.length) {
    console.warn('‚ö† –í —ç—Ç–æ–π –ø–∞–ø–∫–µ –Ω–µ—Ç –∫–∞—Ä—Ç–∏–Ω–æ–∫. –ü—Ä–æ–ø—É—Å–∫–∞—é.');
    return;
  }

  // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ –¥–µ–ª–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏.
  pages = sortPageFiles(pages);
  const absoluteFiles = pages.map(f => path.join(absDir, f));

  console.log(`‚Üí –¢–æ–º: ${volume}, –ì–ª–∞–≤–∞: ${chapterNumber}, –°—Ç—Ä–∞–Ω–∏—Ü: ${pages.length}`);
  if (title) {
    console.log(`‚Üí –ù–∞–∑–≤–∞–Ω–∏–µ –≥–ª–∞–≤—ã: "${title}"`);
  }

  // 3. –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É "–ù–æ–≤–∞—è –≥–ª–∞–≤–∞" (–∫–Ω–æ–ø–∫–∞ ¬´–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É¬ª).
  await clickButtonByText(page, '–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É');

  // 4. –ñ–¥—ë–º, –ø–æ–∫–∞ –º–æ–¥–∞–ª–∫–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–º–æ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è.
  await waitModalOpen(page);

  // 5. –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª—è.
  await typeIntoInputByPlaceholder(page, '0', volume);
  await typeIntoInputByPlaceholder(page, '–Ω–∞–ø—Ä–∏–º–µ—Ä, 12', chapterNumber);
  if (title) await typeIntoInputByPlaceholder(page, '–ù–∞–∑–≤–∞–Ω–∏–µ', title);

  // 6. –í–´–ë–û–† –ö–û–ú–ê–ù–î–´ –ü–û –î–ò–ê–ü–ê–ó–û–ù–£ (–ø–æ –ø–æ—Ä—è–¥–∫–æ–≤–æ–º—É –Ω–æ–º–µ—Ä—É –≥–ª–∞–≤—ã)
  const teamsToPick = decideTeamsByIndex(chapterNumber);

if (teamsToPick.length) {
  await uncheckAllTeams(page);

  for (const t of teamsToPick) {
    if (!t || !t.trim()) continue;
    await waitForTeamOption(page, t, { timeoutMs: 10000 });
    await checkTeamByName(page, t);
    console.log(`üë• –ì–ª–∞–≤–∞ ${chapterNumber}: –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ "${t}"`);
  }
} else {
  console.log(`üë• –ì–ª–∞–≤–∞ ${chapterNumber}: –∫–æ–º–∞–Ω–¥—ã –Ω–µ –≤—ã–±—Ä–∞–Ω—ã (–ø—Ä–∞–≤–∏–ª–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ)`);
}

  // 7. –ó–∞–ª–∏–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã —á–µ—Ä–µ–∑ <input type="file" multiple>.
  await uploadFilesIntoModal(page, absoluteFiles);

  // 8. –ñ–º—ë–º "–ó–∞–≥—Ä—É–∑–∏—Ç—å".
  await clickButtonByText(page, '–ó–∞–≥—Ä—É–∑–∏—Ç—å');

  // 9. –ñ–¥—ë–º, –ø–æ–∫–∞ –º–æ–¥–∞–ª–∫–∞ –∑–∞–∫—Ä–æ–µ—Ç—Å—è ‚Üí —Å–µ—Ä–≤–µ—Ä –∑–∞–∫–æ–Ω—á–∏–ª —Å–æ–∑–¥–∞–Ω–∏–µ/–∫–æ–º–º–∏—Ç –≥–ª–∞–≤—ã.
  await waitModalClose(page);

  console.log('‚úÖ –ì–ª–∞–≤–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.');
}

/* ========================================================================== */
/* ============================== MAIN ====================================== */
/* ========================================================================== */

(async () => {
  // –í–ê–ñ–ù–û:
  // - –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –±–æ—Ç —Å –æ–¥–Ω–∏–º –∏ —Ç–µ–º –∂–µ .bot-profile
  // - –µ—Å–ª–∏ —Ä—É–≥–∞–µ—Ç—Å—è "The browser is already running", –∑–Ω–∞—á–∏—Ç —É —Ç–µ–±—è –µ—â—ë –æ—Ç–∫—Ä—ã—Ç–æ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –æ–∫–Ω–æ Chromium
  //   ‚Üí –∑–∞–∫—Ä–æ–π —Ç–æ –æ–∫–Ω–æ –∏ —É–±–µ–π –ø—Ä–æ—à–ª—ã–π –ø—Ä–æ—Ü–µ—Å—Å node –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º.

  const browser = await puppeteer.launch({
    headless: false,            // —Ö–æ—Ç–∏–º –≤–∏–¥–µ—Ç—å, —á—Ç–æ –æ–Ω –¥–µ–ª–∞–µ—Ç
    defaultViewport: null,
    args: ['--start-maximized'],
    userDataDir: path.resolve('./.bot-profile'), // –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ –ø–∞–ø–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è = –æ–¥–Ω–∞ –∏ —Ç–∞ –∂–µ —Å–µ—Å—Å–∏—è
  });

  const page = await browser.newPage();
  await page.goto(SITE_URL, { waitUntil: 'networkidle2' });

  console.log('–ñ–¥—ë–º –∫–Ω–æ–ø–∫—É ¬´–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É¬ª.');
  console.log('–ï—Å–ª–∏ —Ç—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Äî –ª–æ–≥–∏–Ω—å—Å—è –ø—Ä—è–º–æ –≤ –≠–¢–û–ú –æ–∫–Ω–µ, –Ω–µ –≤ –¥—Ä—É–≥–æ–º –±—Ä–∞—É–∑–µ—Ä–µ.');
  console.log('–ü–æ—Å–ª–µ –ª–æ–≥–∏–Ω–∞ –≤–µ—Ä–Ω–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–∞–π—Ç–ª–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞–Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞, –±–æ—Ç –ø–æ–µ–¥–µ—Ç –¥–∞–ª—å—à–µ.');

  // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ "–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É" –±–µ–∑ —Ç–∞–π–º–∞—É—Ç–∞.
  await waitForButtonByText(page, '–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É', { timeoutMs: 0 });

  console.log('–û–∫, –∫–Ω–æ–ø–∫–∞ ¬´–î–æ–±–∞–≤–∏—Ç—å –≥–ª–∞–≤—É¬ª –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º –º–∞—Å—Å–æ–≤—É—é –∑–∞–≥—Ä—É–∑–∫—É.');

  // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≥–ª–∞–≤—ã –∏–∑ –ø–∞–ø–∫–∏.
  const folders = getChapterFoldersSorted(ROOT_DIR);
  console.log('–ù–∞–π–¥–µ–Ω–æ –ø–∞–ø–æ–∫:', folders.length);

  // –ü–æ –∫–∞–∂–¥–æ–π –ø–∞–ø–∫–µ -> —Å–æ–∑–¥–∞—ë–º –≥–ª–∞–≤—É.  (–ü–†–ê–í–ö–ê: –ø–µ—Ä–µ–¥–∞—ë–º i+1)
  for (let i = 0; i < folders.length; i++) {
    const folderName = folders[i];
    const absPath = path.join(ROOT_DIR, folderName);
    try {
      await uploadOneChapter(page, absPath, folderName, i + 1); // 1-based –∏–Ω–¥–µ–∫—Å

      // –•–æ—á–µ—à—å –ø–æ–º–µ—á–∞—Ç—å "–≥–æ—Ç–æ–≤–æ"? –ú–æ–∂–µ–º –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞—Ç—å –ø–∞–ø–∫—É.
      // fs.renameSync(absPath, absPath + ' [OK]');

    } catch (err) {
      console.error(`üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ "${folderName}":`, err.message || err);
      // –Ω–µ –ø–∞–¥–∞–µ–º, –∏–¥—ë–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –≥–ª–∞–≤–µ
    }
  }

  console.log('\nüéâ –í—Å–µ –ø–∞–ø–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã.');
  console.log('–ë—Ä–∞—É–∑–µ—Ä —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ù–ï –∑–∞–∫—Ä—ã–≤–∞—é ‚Äî –º–æ–∂–µ—à—å —Ä—É–∫–∞–º–∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç.');
  // –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –≥–ª—è–Ω—É—Ç—å
  // await browser.close();
})();